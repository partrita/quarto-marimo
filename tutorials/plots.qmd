---
title: 플롯
marimo-version: 0.13.2
lang: ko
---

# 플로팅

```python {.marimo hide_code="true"}
check_dependencies()
```

marimo는 matplotlib, plotly, seaborn, altair를 포함한 여러 인기 있는 플로팅 라이브러리를 지원합니다.

이 튜토리얼은 matplotlib를 사용한 예를 제공합니다. 다른 라이브러리도 유사하게 사용됩니다.
<!---->
## Matplotlib
<!---->
플롯을 표시하려면 셀의 마지막 표현식에 포함합니다(다른 출력과 마찬가지로).

```python3
# 셀의 마지막 줄에 플롯 만들기
import matplotlib.pyplot as plt
plt.plot([1, 2])
```

```python {.marimo}
plt.plot([1, 2])
```

```python3
# 플롯 만들기
plt.plot([1, 2])
# ... 일부 작업 수행 ...
# 셀의 마지막 줄을 plt.gca()로 만들기
plt.gca()
```

```python {.marimo}
plt.plot([1, 2])
# ... 일부 작업 수행 ...
# 셀의 마지막 줄을 plt.gca()로 만들기
plt.gca()
```

```python {.marimo hide_code="true"}
mo.accordion(plt_show_explainer)
```

**모든 셀에 새 그림.** 모든 셀은 명령형 `pyplot` API에 대한 빈 그림으로 시작합니다.

```python {.marimo}
x = np.linspace(start=-4, stop=4, num=100, dtype=float)
```

```python {.marimo}
plt.plot(x, x)
plt.plot(x, x**2)
plt.gca()
```

```python {.marimo}
plt.plot(x, x**3)
```

여러 셀에 걸쳐 그림을 만들려면 객체 지향 API를 사용하고 자체 축을 만듭니다.

```python {.marimo}
_, axis = plt.subplots()
axis.plot(x, x)
axis.plot(x, x**2)
axis
```

```python {.marimo}
axis.plot(x, x**3)
axis
```

### 대화형으로 플롯 그리기

UI 요소로 매개변수화하여 대화형으로 플롯을 그립니다.

```python {.marimo}
exponent = mo.ui.slider(1, 5, value=1, step=1, label='지수')

mo.md(
    f"""
    **거듭제곱 시각화.**

    {exponent}
    """
)
```

```python {.marimo}
@mo.cache
def plot_power(exponent):
    plt.plot(x, x**exponent)
    return plt.gca()
```

```python {.marimo}
_tex = (
    f"$$f(x) = x^{exponent.value}$$" if exponent.value > 1 else "$$f(x) = x$$"
)

mo.md(
    f"""

    {_tex}

    {mo.as_html(plot_power(exponent.value))}
    """
)
```

## 기타 라이브러리
<!---->
marimo는 다음과 같은 다른 플로팅 라이브러리도 지원합니다.

- Plotly
- Seaborn
- Altair

그림 개체를 셀의 마지막 표현식으로 출력하거나 `mo.as_html`을 사용하여 마크다운에 포함하기만 하면 됩니다.

다른 라이브러리를 marimo에 통합하려면 문의하십시오.

````python {.marimo hide_code="true"}
module_not_found_explainer = mo.md(
    """
    ## 이런!

    이 튜토리얼에 필요한 패키지가 누락된 것 같습니다.

    왼쪽의 패키지 관리자 패널을 사용하여 **numpy** 및 **matplotlib**을 설치한 다음 튜토리얼을 다시 시작하십시오.

    또는 `uv`를 사용하는 경우 다음을 사용하여 튜토리얼을 엽니다.

    ```
    uvx marimo tutorial plots
    ```

    명령줄에서.
    """
).callout(kind='warn')

def check_dependencies():
    if missing_packages:
        return module_not_found_explainer
````

```python {.marimo hide_code="true"}
plt_show_explainer = {
    "`plt.show()` 사용": """
    `plt.show()` 또는 `figure.show()`를 사용하여 셀의 콘솔 영역에 플롯을 표시할 수 있습니다. 콘솔 출력은 앱 보기에 표시되지 않는다는 점에 유의하십시오.
    """
}
```

```python {.marimo}
try:
    import matplotlib
    import matplotlib.pyplot as plt
    import numpy as np
    missing_packages = False
except ModuleNotFoundError:
    missing_packages = True

if not missing_packages:
    matplotlib.rcParams['figure.figsize'] = (6, 2.4)
```

```python {.marimo}
import marimo as mo
```