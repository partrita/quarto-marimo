---
title: 레이아웃
marimo-version: 0.13.2
lang: ko
header: |-
  # Copyright 2024 Marimo. All rights reserved.
filters:
- marimo-team/marimo
---

# 레이아웃

`marimo`는 행과 열, 아코디언, 탭, 설명선 등과 같이 출력을 배치하는 데 도움이 되는 함수를 제공합니다.
<!---->
## 행과 열

`mo.hstack` 및 `mo.vstack`을 사용하여 개체를 행과 열로 정렬합니다.

```python {.marimo}
mo.hstack(
    [mo.ui.text(label="안녕하세요"), mo.ui.slider(1, 10, label="슬라이더")],
    justify="start",
)
```

```python {.marimo}
mo.vstack([mo.ui.text(label="세계"), mo.ui.number(1, 10, label="숫자")])
```

```python {.marimo}
grid = mo.vstack(
    [
        mo.hstack(
            [mo.ui.text(label="안녕하세요"), mo.ui.slider(1, 10, label="슬라이더")],
        ),
        mo.hstack(
            [mo.ui.text(label="세계"), mo.ui.number(1, 10, label="숫자")],
        ),
    ],
).center()

mo.md(
    f"""
    `mo.hstack`과 `mo.vstack`을 결합하여 그리드를 만듭니다.

    {grid}

    `mo.hstack`에서 `mo.vstack`으로 무엇이든 전달할 수 있습니다(플롯 포함!).
    """
)
```

**사용자 지정.**
누적된 요소의 표시는 예제를 통해 가장 잘 이해할 수 있는 몇 가지 인수를 사용하여 사용자 지정할 수 있습니다.

```python {.marimo}
justify = mo.ui.dropdown(
    ["start", "center", "end", "space-between", "space-around"],
    value="space-between",
    label="정렬",
)
align = mo.ui.dropdown(
    ["start", "center", "end", "stretch"], value="center", label="정렬"
)
gap = mo.ui.number(start=0, step=0.25, stop=2, value=0.5, label="간격")
wrap = mo.ui.checkbox(label="줄 바꿈")

mo.hstack([justify, align, gap, wrap], justify="center")
```

```python {.marimo}
size = mo.ui.slider(label="상자 크기", start=60, stop=500)
mo.hstack([size], justify="center")
```

```python {.marimo}
mo.hstack(
    boxes,
    align=align.value,
    justify=justify.value,
    gap=gap.value,
    wrap=wrap.value,
)
```

```python {.marimo}
mo.vstack(
    boxes,
    align=align.value,
    gap=gap.value,
)
```

```python {.marimo}
def create_box(num=1):
    box_size = size.value + num * 10
    return mo.Html(
        f"<div style='min-width: {box_size}px; min-height: {box_size}px; background-color: orange; text-align: center; line-height: {box_size}px'>{str(num)}</div>"
    )


boxes = [create_box(i) for i in range(1, 5)]
```

```python {.marimo hide_code="true"}
mo.accordion(
    {
        "문서: `mo.hstack`": mo.doc(mo.hstack),
        "문서: `mo.vstack`": mo.doc(mo.vstack),
    }
)
```

**`Html` 정렬.** `mo.hstack`을 사용하여 개체를 가운데 또는 오른쪽으로 정렬할 수 있지만 `Html` 개체(대부분의 marimo 함수에서 반환되고 대부분의 marimo 클래스에서 하위 클래스로 지정됨)에는 `center`, `right` 및 `left` 메서드를 통한 바로 가기가 있습니다.
<!---->
이 마크다운은 왼쪽 정렬됩니다.

```python {.marimo}
mo.md("이 마크다운은 가운데 정렬됩니다.").center()
```

```python {.marimo}
mo.md("이 마크다운은 오른쪽 정렬됩니다.").right()
```

```python {.marimo hide_code="true"}
mo.accordion(
    {
        "문서: `Html.center`": mo.doc(mo.Html.center),
        "문서: `Html.right`": mo.doc(mo.Html.right),
        "문서: `Html.left`": mo.doc(mo.Html.left),
    }
)
```

## 아코디언

`mo.accordion`을 사용하여 확장 가능한 콘텐츠 선반을 만듭니다.
<!---->
아코디언에는 여러 항목이 포함될 수 있습니다.

```python {.marimo}
mo.accordion(
    {
        "여러 항목": "기본적으로 한 번에 하나의 항목만 열 수 있습니다.",
        "여러 항목을 열 수 있도록 허용": (
            """
            여러 항목을 동시에 열 수 있도록 하려면 키워드 인수 `multiple=True`를 사용합니다.
            """
        ),
    }
)
```

## 탭

`mo.ui.tabs`를 사용하여 단일 탭 출력에 여러 개체를 표시합니다.

```python {.marimo}
_settings = mo.vstack(
    [
        mo.md("**사용자 편집**"),
        mo.ui.text(label="이름"),
        mo.ui.text(label="성"),
    ]
)

_organization = mo.vstack(
    [
        mo.md("**조직 편집**"),
        mo.ui.text(label="조직 이름"),
        mo.ui.number(label="직원 수", start=0, stop=1000),
    ]
)

mo.ui.tabs(
    {
        "🧙‍♀ 사용자": _settings,
        "🏢 조직": _organization,
    }
)
```

```python {.marimo hide_code="true"}
mo.accordion({"문서: `mo.ui.tabs`": mo.doc(mo.ui.tabs)})
```

```python {.marimo}
_t = [
    mo.md("**안녕하세요!**"),
    mo.md(r"$f(x)$"),
    {"c": mo.ui.slider(1, 10), "d": (mo.ui.checkbox(), mo.ui.switch())},
]

mo.md(
    f"""
    ## 트리

    `mo.tree`를 사용하여 목록, 사전 및 튜플의 중첩 구조를 표시합니다.

    {mo.tree(_t)}
    """
)
```

```python {.marimo hide_code="true"}
mo.accordion({"문서: `mo.tree`": mo.doc(mo.tree)})
```

## 설명선

`callout` 메서드를 사용하여 마크다운 또는 HTML을 강조된 설명선으로 바꿉니다.

```python {.marimo}
callout_kind = mo.ui.dropdown(
    ["neutral", "warn", "success", "info", "danger"], value="neutral"
)
```

```python {.marimo}
mo.md(
    f"""
    **이것은 설명선입니다!**

    HTML 또는 마크다운을 강조된 설명선으로 바꿀 수 있습니다.
    다양한 설명선 종류 중에서 선택할 수 있습니다. 이것은 다음과 같습니다.
    {callout_kind}
    """
).callout(kind=callout_kind.value)
```

```python {.marimo hide_code="true"}
mo.accordion({"문서: `mo.callout`": mo.doc(mo.callout)})
```

```python {.marimo}
import marimo as mo
```